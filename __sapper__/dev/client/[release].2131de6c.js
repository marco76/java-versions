import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, f as claim_element, j as attr_dev, l as add_location, m as insert_dev, b as detach_dev, g as children, o as noop, p as validate_each_argument, I as Icon, t as text, a as space, r as create_component, h as claim_text, c as claim_space, u as claim_component, n as append_dev, w as mount_component, x as set_data_dev, y as transition_in, z as transition_out, A as destroy_component, k as set_style, B as group_outros, C as check_outros, D as destroy_each, E as globals, q as query_selector_all } from './client.ce12dbb9.js';

/* src/components/CategoryIcon.svelte generated by Svelte v3.26.0 */

const file = "src/components/CategoryIcon.svelte";

// (21:4) {#if categoryIcon}
function create_if_block(ctx) {
	let img;
	let img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, height: true, width: true });
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "icons/" + /*categoryIcon*/ ctx[0])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "height", "36");
			attr_dev(img, "width", "36");
			add_location(img, file, 21, 4, 464);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*categoryIcon*/ 1 && img.src !== (img_src_value = "icons/" + /*categoryIcon*/ ctx[0])) {
				attr_dev(img, "src", img_src_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(21:4) {#if categoryIcon}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let span;
	let if_block = /*categoryIcon*/ ctx[0] && create_if_block(ctx);

	const block = {
		c: function create() {
			span = element("span");
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", {});
			var span_nodes = children(span);
			if (if_block) if_block.l(span_nodes);
			span_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(span, file, 19, 0, 430);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
			if (if_block) if_block.m(span, null);
		},
		p: function update(ctx, [dirty]) {
			if (/*categoryIcon*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(span, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
			if (if_block) if_block.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("CategoryIcon", slots, []);
	let { category = "language" } = $$props;
	let categoryIcon;

	switch (category) {
		case "language":
			categoryIcon = "happy.svg";
			break;
		case "deprecated":
			categoryIcon = "bin.svg";
			break;
		case "gc":
			categoryIcon = "recycle.svg";
			break;
		case "tools":
			categoryIcon = "tools.svg";
			break;
		default:
			categoryIcon = undefined;
	}

	const writable_props = ["category"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<CategoryIcon> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("category" in $$props) $$invalidate(1, category = $$props.category);
	};

	$$self.$capture_state = () => ({ category, categoryIcon });

	$$self.$inject_state = $$props => {
		if ("category" in $$props) $$invalidate(1, category = $$props.category);
		if ("categoryIcon" in $$props) $$invalidate(0, categoryIcon = $$props.categoryIcon);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [categoryIcon, category];
}

class CategoryIcon extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { category: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "CategoryIcon",
			options,
			id: create_fragment.name
		});
	}

	get category() {
		throw new Error("<CategoryIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set category(value) {
		throw new Error("<CategoryIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/DataTableFeature.svelte generated by Svelte v3.26.0 */
const file$1 = "src/components/DataTableFeature.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[2] = list[i];
	return child_ctx;
}

// (66:4) {#each features as item}
function create_each_block(ctx) {
	let tr;
	let td0;
	let a;
	let t0_value = /*item*/ ctx[2]["jepNumber"] + "";
	let t0;
	let t1;
	let icon;
	let a_href_value;
	let t2;
	let td1;
	let t3_value = /*item*/ ctx[2]["name"] + "";
	let t3;
	let t4;
	let td2;
	let categoryicon;
	let t5;
	let td3;
	let t6_value = /*item*/ ctx[2]["summary"] + "";
	let t6;
	let t7;
	let current;
	icon = new Icon({ $$inline: true });

	categoryicon = new CategoryIcon({
			props: { category: /*item*/ ctx[2]["category"] },
			$$inline: true
		});

	const block = {
		c: function create() {
			tr = element("tr");
			td0 = element("td");
			a = element("a");
			t0 = text(t0_value);
			t1 = space();
			create_component(icon.$$.fragment);
			t2 = space();
			td1 = element("td");
			t3 = text(t3_value);
			t4 = space();
			td2 = element("td");
			create_component(categoryicon.$$.fragment);
			t5 = space();
			td3 = element("td");
			t6 = text(t6_value);
			t7 = space();
			this.h();
		},
		l: function claim(nodes) {
			tr = claim_element(nodes, "TR", { class: true });
			var tr_nodes = children(tr);
			td0 = claim_element(tr_nodes, "TD", { class: true });
			var td0_nodes = children(td0);
			a = claim_element(td0_nodes, "A", { target: true, href: true });
			var a_nodes = children(a);
			t0 = claim_text(a_nodes, t0_value);
			t1 = claim_space(a_nodes);
			claim_component(icon.$$.fragment, a_nodes);
			a_nodes.forEach(detach_dev);
			td0_nodes.forEach(detach_dev);
			t2 = claim_space(tr_nodes);
			td1 = claim_element(tr_nodes, "TD", { class: true });
			var td1_nodes = children(td1);
			t3 = claim_text(td1_nodes, t3_value);
			td1_nodes.forEach(detach_dev);
			t4 = claim_space(tr_nodes);
			td2 = claim_element(tr_nodes, "TD", { class: true });
			var td2_nodes = children(td2);
			claim_component(categoryicon.$$.fragment, td2_nodes);
			td2_nodes.forEach(detach_dev);
			t5 = claim_space(tr_nodes);
			td3 = claim_element(tr_nodes, "TD", { class: true });
			var td3_nodes = children(td3);
			t6 = claim_text(td3_nodes, t6_value);
			td3_nodes.forEach(detach_dev);
			t7 = claim_space(tr_nodes);
			tr_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a, "target", "_blank");
			attr_dev(a, "href", a_href_value = "http://openjdk.java.net/jeps/" + /*item*/ ctx[2]["jepNumber"]);
			add_location(a, file$1, 67, 12, 1488);
			attr_dev(td0, "class", "svelte-fhl9hc");
			add_location(td0, file$1, 67, 8, 1484);
			attr_dev(td1, "class", "svelte-fhl9hc");
			add_location(td1, file$1, 70, 8, 1628);
			attr_dev(td2, "class", "svelte-fhl9hc");
			add_location(td2, file$1, 71, 8, 1660);
			attr_dev(td3, "class", "svelte-fhl9hc");
			add_location(td3, file$1, 72, 8, 1724);
			attr_dev(tr, "class", "svelte-fhl9hc");
			add_location(tr, file$1, 66, 4, 1471);
		},
		m: function mount(target, anchor) {
			insert_dev(target, tr, anchor);
			append_dev(tr, td0);
			append_dev(td0, a);
			append_dev(a, t0);
			append_dev(a, t1);
			mount_component(icon, a, null);
			append_dev(tr, t2);
			append_dev(tr, td1);
			append_dev(td1, t3);
			append_dev(tr, t4);
			append_dev(tr, td2);
			mount_component(categoryicon, td2, null);
			append_dev(tr, t5);
			append_dev(tr, td3);
			append_dev(td3, t6);
			append_dev(tr, t7);
			current = true;
		},
		p: function update(ctx, dirty) {
			if ((!current || dirty & /*features*/ 1) && t0_value !== (t0_value = /*item*/ ctx[2]["jepNumber"] + "")) set_data_dev(t0, t0_value);

			if (!current || dirty & /*features*/ 1 && a_href_value !== (a_href_value = "http://openjdk.java.net/jeps/" + /*item*/ ctx[2]["jepNumber"])) {
				attr_dev(a, "href", a_href_value);
			}

			if ((!current || dirty & /*features*/ 1) && t3_value !== (t3_value = /*item*/ ctx[2]["name"] + "")) set_data_dev(t3, t3_value);
			const categoryicon_changes = {};
			if (dirty & /*features*/ 1) categoryicon_changes.category = /*item*/ ctx[2]["category"];
			categoryicon.$set(categoryicon_changes);
			if ((!current || dirty & /*features*/ 1) && t6_value !== (t6_value = /*item*/ ctx[2]["summary"] + "")) set_data_dev(t6, t6_value);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(icon.$$.fragment, local);
			transition_in(categoryicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(icon.$$.fragment, local);
			transition_out(categoryicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(tr);
			destroy_component(icon);
			destroy_component(categoryicon);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(66:4) {#each features as item}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let table;
	let thead;
	let tr;
	let th0;
	let t0;
	let t1;
	let th1;
	let t2;
	let t3;
	let th2;
	let t4;
	let t5;
	let th3;
	let t6;
	let t7;
	let tbody;
	let current;
	let each_value = /*features*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			table = element("table");
			thead = element("thead");
			tr = element("tr");
			th0 = element("th");
			t0 = text("JEP");
			t1 = space();
			th1 = element("th");
			t2 = text("Name");
			t3 = space();
			th2 = element("th");
			t4 = text("Category");
			t5 = space();
			th3 = element("th");
			t6 = text("Summary");
			t7 = space();
			tbody = element("tbody");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			table = claim_element(nodes, "TABLE", { class: true });
			var table_nodes = children(table);
			thead = claim_element(table_nodes, "THEAD", {});
			var thead_nodes = children(thead);
			tr = claim_element(thead_nodes, "TR", { class: true });
			var tr_nodes = children(tr);
			th0 = claim_element(tr_nodes, "TH", { class: true });
			var th0_nodes = children(th0);
			t0 = claim_text(th0_nodes, "JEP");
			th0_nodes.forEach(detach_dev);
			t1 = claim_space(tr_nodes);
			th1 = claim_element(tr_nodes, "TH", { class: true });
			var th1_nodes = children(th1);
			t2 = claim_text(th1_nodes, "Name");
			th1_nodes.forEach(detach_dev);
			t3 = claim_space(tr_nodes);
			th2 = claim_element(tr_nodes, "TH", { class: true });
			var th2_nodes = children(th2);
			t4 = claim_text(th2_nodes, "Category");
			th2_nodes.forEach(detach_dev);
			t5 = claim_space(tr_nodes);
			th3 = claim_element(tr_nodes, "TH", { class: true, style: true });
			var th3_nodes = children(th3);
			t6 = claim_text(th3_nodes, "Summary");
			th3_nodes.forEach(detach_dev);
			tr_nodes.forEach(detach_dev);
			thead_nodes.forEach(detach_dev);
			t7 = claim_space(table_nodes);
			tbody = claim_element(table_nodes, "TBODY", {});
			var tbody_nodes = children(tbody);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(tbody_nodes);
			}

			tbody_nodes.forEach(detach_dev);
			table_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(th0, "class", "svelte-fhl9hc");
			add_location(th0, file$1, 58, 10, 1244);
			attr_dev(th1, "class", "name svelte-fhl9hc");
			add_location(th1, file$1, 59, 10, 1267);
			attr_dev(th2, "class", "category svelte-fhl9hc");
			add_location(th2, file$1, 60, 10, 1304);
			attr_dev(th3, "class", "summary svelte-fhl9hc");
			set_style(th3, "width", "555px");
			add_location(th3, file$1, 61, 10, 1349);
			attr_dev(tr, "class", "svelte-fhl9hc");
			add_location(tr, file$1, 57, 4, 1229);
			add_location(thead, file$1, 56, 4, 1217);
			add_location(tbody, file$1, 64, 4, 1430);
			attr_dev(table, "class", "styled-table svelte-fhl9hc");
			add_location(table, file$1, 55, 0, 1184);
		},
		m: function mount(target, anchor) {
			insert_dev(target, table, anchor);
			append_dev(table, thead);
			append_dev(thead, tr);
			append_dev(tr, th0);
			append_dev(th0, t0);
			append_dev(tr, t1);
			append_dev(tr, th1);
			append_dev(th1, t2);
			append_dev(tr, t3);
			append_dev(tr, th2);
			append_dev(th2, t4);
			append_dev(tr, t5);
			append_dev(tr, th3);
			append_dev(th3, t6);
			append_dev(table, t7);
			append_dev(table, tbody);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(tbody, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*features*/ 1) {
				each_value = /*features*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(tbody, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(table);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("DataTableFeature", slots, []);
	let { features = [] } = $$props;
	let { style = "standard" } = $$props;
	const writable_props = ["features", "style"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<DataTableFeature> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("features" in $$props) $$invalidate(0, features = $$props.features);
		if ("style" in $$props) $$invalidate(1, style = $$props.style);
	};

	$$self.$capture_state = () => ({ Icon, CategoryIcon, features, style });

	$$self.$inject_state = $$props => {
		if ("features" in $$props) $$invalidate(0, features = $$props.features);
		if ("style" in $$props) $$invalidate(1, style = $$props.style);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [features, style];
}

class DataTableFeature extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { features: 0, style: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "DataTableFeature",
			options,
			id: create_fragment$1.name
		});
	}

	get features() {
		throw new Error("<DataTableFeature>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set features(value) {
		throw new Error("<DataTableFeature>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get style() {
		throw new Error("<DataTableFeature>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set style(value) {
		throw new Error("<DataTableFeature>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/java/[release].svelte generated by Svelte v3.26.0 */

const { Object: Object_1 } = globals;
const file$2 = "src/routes/java/[release].svelte";

function create_fragment$2(ctx) {
	let title_value;
	let t0;
	let h1;
	let t1;
	let t2;
	let t3;
	let p;
	let a0;
	let t4;
	let t5;
	let a1;
	let t6;
	let t7;
	let a2;
	let t8;
	let t9;
	let h30;
	let t10;
	let t11;
	let datatablefeature0;
	let t12;
	let h31;
	let t13;
	let t14;
	let datatablefeature1;
	let current;
	document.title = title_value = "marco.dev - Java Release " + /*releaseNr*/ ctx[0];

	datatablefeature0 = new DataTableFeature({
			props: { features: /*delivered*/ ctx[3] },
			$$inline: true
		});

	datatablefeature1 = new DataTableFeature({
			props: { features: /*preview*/ ctx[4] },
			$$inline: true
		});

	const block = {
		c: function create() {
			t0 = space();
			h1 = element("h1");
			t1 = text("Java release ");
			t2 = text(/*releaseNr*/ ctx[0]);
			t3 = space();
			p = element("p");
			a0 = element("a");
			t4 = text("Release notes");
			t5 = text("\n    -\n    ");
			a1 = element("a");
			t6 = text("Specification");
			t7 = text("\n    -\n    ");
			a2 = element("a");
			t8 = text("JEPS");
			t9 = space();
			h30 = element("h3");
			t10 = text("Delivered");
			t11 = space();
			create_component(datatablefeature0.$$.fragment);
			t12 = space();
			h31 = element("h3");
			t13 = text("Preview only");
			t14 = space();
			create_component(datatablefeature1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-vave9\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			h1 = claim_element(nodes, "H1", {});
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Java release ");
			t2 = claim_text(h1_nodes, /*releaseNr*/ ctx[0]);
			h1_nodes.forEach(detach_dev);
			t3 = claim_space(nodes);
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			a0 = claim_element(p_nodes, "A", { href: true, target: true });
			var a0_nodes = children(a0);
			t4 = claim_text(a0_nodes, "Release notes");
			a0_nodes.forEach(detach_dev);
			t5 = claim_text(p_nodes, "\n    -\n    ");
			a1 = claim_element(p_nodes, "A", { href: true, target: true });
			var a1_nodes = children(a1);
			t6 = claim_text(a1_nodes, "Specification");
			a1_nodes.forEach(detach_dev);
			t7 = claim_text(p_nodes, "\n    -\n    ");
			a2 = claim_element(p_nodes, "A", { href: true, target: true });
			var a2_nodes = children(a2);
			t8 = claim_text(a2_nodes, "JEPS");
			a2_nodes.forEach(detach_dev);
			p_nodes.forEach(detach_dev);
			t9 = claim_space(nodes);
			h30 = claim_element(nodes, "H3", {});
			var h30_nodes = children(h30);
			t10 = claim_text(h30_nodes, "Delivered");
			h30_nodes.forEach(detach_dev);
			t11 = claim_space(nodes);
			claim_component(datatablefeature0.$$.fragment, nodes);
			t12 = claim_space(nodes);
			h31 = claim_element(nodes, "H3", {});
			var h31_nodes = children(h31);
			t13 = claim_text(h31_nodes, "Preview only");
			h31_nodes.forEach(detach_dev);
			t14 = claim_space(nodes);
			claim_component(datatablefeature1.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file$2, 47, 0, 1371);
			attr_dev(a0, "href", /*releaseNotesUrl*/ ctx[1]);
			attr_dev(a0, "target", "_blank");
			add_location(a0, file$2, 49, 4, 1414);
			attr_dev(a1, "href", /*releaseNotesUrl*/ ctx[1]);
			attr_dev(a1, "target", "_blank");
			add_location(a1, file$2, 51, 4, 1486);
			attr_dev(a2, "href", /*jepsUrl*/ ctx[2]);
			attr_dev(a2, "target", "_blank");
			add_location(a2, file$2, 53, 4, 1558);
			add_location(p, file$2, 48, 0, 1406);
			add_location(h30, file$2, 57, 0, 1610);
			add_location(h31, file$2, 60, 0, 1691);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, h1, anchor);
			append_dev(h1, t1);
			append_dev(h1, t2);
			insert_dev(target, t3, anchor);
			insert_dev(target, p, anchor);
			append_dev(p, a0);
			append_dev(a0, t4);
			append_dev(p, t5);
			append_dev(p, a1);
			append_dev(a1, t6);
			append_dev(p, t7);
			append_dev(p, a2);
			append_dev(a2, t8);
			insert_dev(target, t9, anchor);
			insert_dev(target, h30, anchor);
			append_dev(h30, t10);
			insert_dev(target, t11, anchor);
			mount_component(datatablefeature0, target, anchor);
			insert_dev(target, t12, anchor);
			insert_dev(target, h31, anchor);
			append_dev(h31, t13);
			insert_dev(target, t14, anchor);
			mount_component(datatablefeature1, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*releaseNr*/ 1) && title_value !== (title_value = "marco.dev - Java Release " + /*releaseNr*/ ctx[0])) {
				document.title = title_value;
			}

			if (!current || dirty & /*releaseNr*/ 1) set_data_dev(t2, /*releaseNr*/ ctx[0]);

			if (!current || dirty & /*releaseNotesUrl*/ 2) {
				attr_dev(a0, "href", /*releaseNotesUrl*/ ctx[1]);
			}

			if (!current || dirty & /*releaseNotesUrl*/ 2) {
				attr_dev(a1, "href", /*releaseNotesUrl*/ ctx[1]);
			}

			if (!current || dirty & /*jepsUrl*/ 4) {
				attr_dev(a2, "href", /*jepsUrl*/ ctx[2]);
			}

			const datatablefeature0_changes = {};
			if (dirty & /*delivered*/ 8) datatablefeature0_changes.features = /*delivered*/ ctx[3];
			datatablefeature0.$set(datatablefeature0_changes);
			const datatablefeature1_changes = {};
			if (dirty & /*preview*/ 16) datatablefeature1_changes.features = /*preview*/ ctx[4];
			datatablefeature1.$set(datatablefeature1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(datatablefeature0.$$.fragment, local);
			transition_in(datatablefeature1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(datatablefeature0.$$.fragment, local);
			transition_out(datatablefeature1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(p);
			if (detaching) detach_dev(t9);
			if (detaching) detach_dev(h30);
			if (detaching) detach_dev(t11);
			destroy_component(datatablefeature0, detaching);
			if (detaching) detach_dev(t12);
			if (detaching) detach_dev(h31);
			if (detaching) detach_dev(t14);
			destroy_component(datatablefeature1, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload({ params }) {
	// the `slug` parameter is available because
	// this file is called [slug].svelte
	const { release } = params;

	const res = await this.fetch(`http://localhost:8080/features/${release}`);
	const data = await res.json();

	if (res.status === 200) {
		return { releaseNr: release, features: data };
	} else {
		this.error(res.status, data.message);
	}
}

function getKeys(data) {
	if (data.length > 0) {
		return Object.keys(data[0]);
	}

	return [];
}

function instance$2($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("U5Breleaseu5D", slots, []);
	let releaseNotesUrl;
	let specificationUrl;
	let jepsUrl;
	let delivered;
	let preview;
	let { releaseNr } = $$props;
	let { features = [] } = $$props;
	const writable_props = ["releaseNr", "features"];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<U5Breleaseu5D> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("releaseNr" in $$props) $$invalidate(0, releaseNr = $$props.releaseNr);
		if ("features" in $$props) $$invalidate(5, features = $$props.features);
	};

	$$self.$capture_state = () => ({
		preload,
		DataTableFeature,
		releaseNotesUrl,
		specificationUrl,
		jepsUrl,
		delivered,
		preview,
		releaseNr,
		features,
		getKeys
	});

	$$self.$inject_state = $$props => {
		if ("releaseNotesUrl" in $$props) $$invalidate(1, releaseNotesUrl = $$props.releaseNotesUrl);
		if ("specificationUrl" in $$props) specificationUrl = $$props.specificationUrl;
		if ("jepsUrl" in $$props) $$invalidate(2, jepsUrl = $$props.jepsUrl);
		if ("delivered" in $$props) $$invalidate(3, delivered = $$props.delivered);
		if ("preview" in $$props) $$invalidate(4, preview = $$props.preview);
		if ("releaseNr" in $$props) $$invalidate(0, releaseNr = $$props.releaseNr);
		if ("features" in $$props) $$invalidate(5, features = $$props.features);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*features*/ 32) {
			 $$invalidate(3, delivered = features.filter(value => value.delivered));
		}

		if ($$self.$$.dirty & /*features*/ 32) {
			 $$invalidate(4, preview = features.filter(value => !value.delivered));
		}

		if ($$self.$$.dirty & /*releaseNr*/ 1) {
			 $$invalidate(1, releaseNotesUrl = `https://jdk.java.net/${releaseNr}/release-notes`);
		}

		if ($$self.$$.dirty & /*releaseNr*/ 1) {
			 specificationUrl = `https://cr.openjdk.java.net/~iris/se/${releaseNr}/latestSpec//api/index.html`;
		}

		if ($$self.$$.dirty & /*releaseNr*/ 1) {
			 $$invalidate(2, jepsUrl = `https://openjdk.java.net/projects/jdk/${releaseNr}/`);
		}
	};

	return [releaseNr, releaseNotesUrl, jepsUrl, delivered, preview, features];
}

class U5Breleaseu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { releaseNr: 0, features: 5 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Breleaseu5D",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*releaseNr*/ ctx[0] === undefined && !("releaseNr" in props)) {
			console.warn("<U5Breleaseu5D> was created without expected prop 'releaseNr'");
		}
	}

	get releaseNr() {
		throw new Error("<U5Breleaseu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set releaseNr(value) {
		throw new Error("<U5Breleaseu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get features() {
		throw new Error("<U5Breleaseu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set features(value) {
		throw new Error("<U5Breleaseu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default U5Breleaseu5D;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
